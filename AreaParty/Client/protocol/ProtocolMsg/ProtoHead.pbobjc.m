// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoHead.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "ProtoHead.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - ProtoHeadRoot

@implementation ProtoHeadRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - Enum ENetworkMessage

GPBEnumDescriptor *ENetworkMessage_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "KeepAliveSync\000RegisterReq\000RegisterRsp\000Lo"
        "ginReq\000LoginRsp\000PersonalsettingsReq\000Pers"
        "onalsettingsRsp\000GetUserinfoReq\000GetUserin"
        "foRsp\000AddFriendReq\000AddFriendRsp\000DeleteFr"
        "iendReq\000DeleteFriendRsp\000OfflineSync\000Logo"
        "utReq\000LogoutRsp\000GetPersonalinfoReq\000GetPe"
        "rsonalinfoRsp\000ChangeFriendSync\000SendChatR"
        "eq\000SendChatRsp\000ReceiveChatSync\000CreateGro"
        "upChatReq\000CreateGroupChatRsp\000ChangeGroup"
        "Req\000ChangeGroupRsp\000ChangeGroupSync\000GetGr"
        "oupInfoReq\000GetGroupInfoRsp\000GetFileInfoRe"
        "q\000GetFileInfoRsp\000AddFileReq\000AddFileRsp\000D"
        "eleteFileReq\000DeleteFileRsp\000ChangeFileReq"
        "\000ChangeFileRsp\000GetMiracastInfoReq\000GetMir"
        "acastInfoRsp\000AccreditReq\000AccreditRsp\000Get"
        "ExeInfoReq\000GetExeInfoRsp\000GetDownloadFile"
        "InfoReq\000GetDownloadFileInfoRsp\000SendCode\000";
    static const int32_t values[] = {
        ENetworkMessage_KeepAliveSync,
        ENetworkMessage_RegisterReq,
        ENetworkMessage_RegisterRsp,
        ENetworkMessage_LoginReq,
        ENetworkMessage_LoginRsp,
        ENetworkMessage_PersonalsettingsReq,
        ENetworkMessage_PersonalsettingsRsp,
        ENetworkMessage_GetUserinfoReq,
        ENetworkMessage_GetUserinfoRsp,
        ENetworkMessage_AddFriendReq,
        ENetworkMessage_AddFriendRsp,
        ENetworkMessage_DeleteFriendReq,
        ENetworkMessage_DeleteFriendRsp,
        ENetworkMessage_OfflineSync,
        ENetworkMessage_LogoutReq,
        ENetworkMessage_LogoutRsp,
        ENetworkMessage_GetPersonalinfoReq,
        ENetworkMessage_GetPersonalinfoRsp,
        ENetworkMessage_ChangeFriendSync,
        ENetworkMessage_SendChatReq,
        ENetworkMessage_SendChatRsp,
        ENetworkMessage_ReceiveChatSync,
        ENetworkMessage_CreateGroupChatReq,
        ENetworkMessage_CreateGroupChatRsp,
        ENetworkMessage_ChangeGroupReq,
        ENetworkMessage_ChangeGroupRsp,
        ENetworkMessage_ChangeGroupSync,
        ENetworkMessage_GetGroupInfoReq,
        ENetworkMessage_GetGroupInfoRsp,
        ENetworkMessage_GetFileInfoReq,
        ENetworkMessage_GetFileInfoRsp,
        ENetworkMessage_AddFileReq,
        ENetworkMessage_AddFileRsp,
        ENetworkMessage_DeleteFileReq,
        ENetworkMessage_DeleteFileRsp,
        ENetworkMessage_ChangeFileReq,
        ENetworkMessage_ChangeFileRsp,
        ENetworkMessage_GetMiracastInfoReq,
        ENetworkMessage_GetMiracastInfoRsp,
        ENetworkMessage_AccreditReq,
        ENetworkMessage_AccreditRsp,
        ENetworkMessage_GetExeInfoReq,
        ENetworkMessage_GetExeInfoRsp,
        ENetworkMessage_GetDownloadFileInfoReq,
        ENetworkMessage_GetDownloadFileInfoRsp,
        ENetworkMessage_SendCode,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ENetworkMessage)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:ENetworkMessage_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL ENetworkMessage_IsValidValue(int32_t value__) {
  switch (value__) {
    case ENetworkMessage_KeepAliveSync:
    case ENetworkMessage_RegisterReq:
    case ENetworkMessage_RegisterRsp:
    case ENetworkMessage_LoginReq:
    case ENetworkMessage_LoginRsp:
    case ENetworkMessage_PersonalsettingsReq:
    case ENetworkMessage_PersonalsettingsRsp:
    case ENetworkMessage_GetUserinfoReq:
    case ENetworkMessage_GetUserinfoRsp:
    case ENetworkMessage_AddFriendReq:
    case ENetworkMessage_AddFriendRsp:
    case ENetworkMessage_DeleteFriendReq:
    case ENetworkMessage_DeleteFriendRsp:
    case ENetworkMessage_OfflineSync:
    case ENetworkMessage_LogoutReq:
    case ENetworkMessage_LogoutRsp:
    case ENetworkMessage_GetPersonalinfoReq:
    case ENetworkMessage_GetPersonalinfoRsp:
    case ENetworkMessage_ChangeFriendSync:
    case ENetworkMessage_SendChatReq:
    case ENetworkMessage_SendChatRsp:
    case ENetworkMessage_ReceiveChatSync:
    case ENetworkMessage_CreateGroupChatReq:
    case ENetworkMessage_CreateGroupChatRsp:
    case ENetworkMessage_ChangeGroupReq:
    case ENetworkMessage_ChangeGroupRsp:
    case ENetworkMessage_ChangeGroupSync:
    case ENetworkMessage_GetGroupInfoReq:
    case ENetworkMessage_GetGroupInfoRsp:
    case ENetworkMessage_GetFileInfoReq:
    case ENetworkMessage_GetFileInfoRsp:
    case ENetworkMessage_AddFileReq:
    case ENetworkMessage_AddFileRsp:
    case ENetworkMessage_DeleteFileReq:
    case ENetworkMessage_DeleteFileRsp:
    case ENetworkMessage_ChangeFileReq:
    case ENetworkMessage_ChangeFileRsp:
    case ENetworkMessage_GetMiracastInfoReq:
    case ENetworkMessage_GetMiracastInfoRsp:
    case ENetworkMessage_AccreditReq:
    case ENetworkMessage_AccreditRsp:
    case ENetworkMessage_GetExeInfoReq:
    case ENetworkMessage_GetExeInfoRsp:
    case ENetworkMessage_GetDownloadFileInfoReq:
    case ENetworkMessage_GetDownloadFileInfoRsp:
    case ENetworkMessage_SendCode:
      return YES;
    default:
      return NO;
  }
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
