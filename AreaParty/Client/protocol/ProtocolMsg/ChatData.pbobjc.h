// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChatData.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum ChatItem_ChatType

typedef GPB_ENUM(ChatItem_ChatType) {
  ChatItem_ChatType_Text = 0,
  ChatItem_ChatType_Image = 1,
};

GPBEnumDescriptor *ChatItem_ChatType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ChatItem_ChatType_IsValidValue(int32_t value);

#pragma mark - Enum ChatItem_TargetType

typedef GPB_ENUM(ChatItem_TargetType) {
  ChatItem_TargetType_Individual = 0,
  ChatItem_TargetType_Group = 1,
  ChatItem_TargetType_System = 2,
  ChatItem_TargetType_Download = 3,
  ChatItem_TargetType_Agreedownload = 4,
  ChatItem_TargetType_Disagreedownload = 5,
  ChatItem_TargetType_Send = 6,
  ChatItem_TargetType_Receive = 7,
};

GPBEnumDescriptor *ChatItem_TargetType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL ChatItem_TargetType_IsValidValue(int32_t value);

#pragma mark - ChatDataRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ChatDataRoot : GPBRootObject
@end

#pragma mark - ChatItem

typedef GPB_ENUM(ChatItem_FieldNumber) {
  ChatItem_FieldNumber_TargetType = 1,
  ChatItem_FieldNumber_SendUserId = 2,
  ChatItem_FieldNumber_FileDate = 3,
  ChatItem_FieldNumber_FileName = 4,
  ChatItem_FieldNumber_FileSize = 5,
  ChatItem_FieldNumber_ReceiveUserId = 6,
  ChatItem_FieldNumber_ChatType = 7,
  ChatItem_FieldNumber_ChatBody = 8,
  ChatItem_FieldNumber_Date = 9,
  ChatItem_FieldNumber_ChatId = 10,
};

@interface ChatItem : GPBMessage

@property(nonatomic, readwrite) ChatItem_TargetType targetType;

@property(nonatomic, readwrite) BOOL hasTargetType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *sendUserId;
/** Test to see if @c sendUserId has been set. */
@property(nonatomic, readwrite) BOOL hasSendUserId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileDate;
/** Test to see if @c fileDate has been set. */
@property(nonatomic, readwrite) BOOL hasFileDate;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileName;
/** Test to see if @c fileName has been set. */
@property(nonatomic, readwrite) BOOL hasFileName;

@property(nonatomic, readwrite, copy, null_resettable) NSString *fileSize;
/** Test to see if @c fileSize has been set. */
@property(nonatomic, readwrite) BOOL hasFileSize;

@property(nonatomic, readwrite, copy, null_resettable) NSString *receiveUserId;
/** Test to see if @c receiveUserId has been set. */
@property(nonatomic, readwrite) BOOL hasReceiveUserId;

@property(nonatomic, readwrite) ChatItem_ChatType chatType;

@property(nonatomic, readwrite) BOOL hasChatType;
@property(nonatomic, readwrite, copy, null_resettable) NSString *chatBody;
/** Test to see if @c chatBody has been set. */
@property(nonatomic, readwrite) BOOL hasChatBody;

@property(nonatomic, readwrite) int64_t date;

@property(nonatomic, readwrite) BOOL hasDate;
@property(nonatomic, readwrite) int64_t chatId;

@property(nonatomic, readwrite) BOOL hasChatId;
@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
